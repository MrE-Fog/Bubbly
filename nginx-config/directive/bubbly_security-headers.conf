####	Access Control Allow Origin
# CORS: Cross-Origin Resource Sharing

# [OPTION] Pick a CORS policy below.

# Option 1. [DEFAULT] "origin" Only allow access to resources from origin.
# [WARNING] Will stop external sites loading your assets.
add_header Access-Control-Allow-Origin "origin" always;

# Option 2. "*" Allow any site to load resources from your origin.
#add_header Access-Control-Allow-Origin "*" always;


####	Content Security Policy	
# There is website that helps you generate a policy here http://cspisawesome.com/	

# [OPTION] Pick a Content Security Policy below.	

# Option 1. [DEFAULT] Off	

# Option 2. Report only with a few sensible defaults.	
# [OPTION] Configure reporting URL for report-uri.io	
#add_header Content-Security-Policy-Report-Only:   "default-src 'self'; report-uri https://%report-uri-username%.report-uri.com/r/d/csp/reportOnly" always;	
#add_header X-Content-Security-Policy-Report-Only: "default-src 'self'; report-uri https://%report-uri-username%.report-uri.com/r/d/csp/reportOnly" always;	
#add_header X-WebKit-CSP-Report-Only:              "default-src 'self'; report-uri https://%report-uri-username%.report-uri.com/r/d/csp/reportOnly" always;	

# Option 3. Report and enforce.	
# [WARNING] This is off by default for good reason. This will break lots of things if you get it wrong.	
# [OPTION] Configure reporting URL for report-uri.io	
#include directive/bubbly_security-headers_csp.conf;
####	Content Type Options
# Stop content loading as a different MIME Type.
# [DEFAULT] NOSNIFF
add_header Content-Type-Options NOSNIFF always;
add_header X-Content-Type-Options NOSNIFF always;


####	Expect Certificate Transparency
# You can read more about this policy here https://scotthelme.co.uk/a-new-security-header-expect-ct/

# [OPTION] Pick a Expect-CT policy below.

# Option 1. Off

# Option 2. Report Only, no enforcement or max-age.
# [OPTION] Configure reporting URL for report-uri.io
#add_header Expect-CT "max-age=0, report-uri='https://%report-uri-username%.report-uri.com/r/d/ct/reportOnly'" always;

# Option 3. [DEFAULT] Enforce with an age of 30 seconds to test.
# [WARNING] If your site does not feature certificate transparency, this will cause your site to fail to load.
add_header Expect-CT "enforce, max-age=30" always;

# Option 4. Report and enforce.
# [WARNING] If your site does not feature certificate transparency, this will cause your site to fail to load.
# [OPTION] Configure reporting URL. Maybe use report-uri.io ?
#add_header Expect-CT "enforce, max-age=31536000, report-uri='https://%report-uri-username%.report-uri.com/r/d/ct/enforce'" always;


####	Frame Options
# [OPTION] Stop pages being displayed in iFrames.
# Option 1. [DEFAULT] DENY
# [WARNING] Frame-Options and X-Frame-Options DENY will break iframed sites.
# Option 2. SAMEORIGIN
# Option 3. ALLOW-FROM $var
add_header Frame-Options DENY always;
add_header X-Frame-Options DENY always;


####	Referrer Policy
# Stops specific referrer information being sent to outside domains.
# [OPTION] There are a lot of options for this, we suggest reading this:
# https://scotthelme.co.uk/a-new-security-header-referrer-policy/
add_header Referrer-Policy "strict-origin-when-cross-origin" always;


####	Server Version
# [OPTION] Turn off sending the Nginx version in the server header.
# Doesn't seem to work out of the box with some Nginx installations.
#server_tokensÂ off;


####	Strict Transport Security
# [WARNING] Strict-Transport-Security will stop HTTP access for specified time.
# [OPTION] Include sub-domains with HSTS.

# Option 1. [DEFAULT] Current domain only.
add_header Strict-Transport-Security "max-age=31536000" always;

# Option 2. includeSubDomains
# [WARNING] This will block HTTP access to sub-domains.
#add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;


####	XSS Protection
# Stops pages being compromised by cross-site scripting.
# Default: 1
# Alternative: 0
add_header XSS-Protection "1; mode=block" always;
add_header X-XSS-Protection "1; mode=block" always;
